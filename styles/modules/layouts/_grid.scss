/* ---------------------------------------------
 Grid
 --
 Grid-generating code to match design's grid
--------------------------------------------- */

$GRID_COL_GUTTER_WIDTH: 20;
$GRID_COL_GUTTER_WIDTH_HALF: 1rem;

@mixin buildGridCols($total-cols, $grid-type: '') { // 12
  @for $GRID_INDEX from 1 through $total-cols { //12
    // find the column size
    $GRID_COL_SIZE: ($GRID_INDEX / $total-cols) * 100%; // 12 / 12 * 100%

    // find the remainder of space and how much to apply to each column
    // remainder is the missing left and right margins on the first and last children of the grid
    // round up to a whole number avoid sub pixel rounding issues
    $GRID_REMAINDER: floor($GRID_COL_GUTTER_WIDTH / ($total-cols / $GRID_INDEX)); // (8 / (12 / 12))
    // loop through and write the classes
    .grid-cell_#{$GRID_INDEX}#{$grid-type} {
      width: calc(#{$GRID_COL_SIZE} - #{($GRID_COL_GUTTER_WIDTH - $GRID_REMAINDER)/10}rem);
    }
  }
}

.grid {
  display: flex;
  flex-flow: row wrap;
  width: 100%;
}

.grid-cell {
  margin: 0 $GRID_COL_GUTTER_WIDTH_HALF;

  &:first-child {
    margin-left: 0;
  }

  &:last-child {
    margin-right: 0;
  }
}

@include buildGridCols(4, 'Sm');

@media screen and (min-width: $VIEWPORT_MD) {
  @include buildGridCols(8, 'Md');
}

@media screen and (min-width: $VIEWPORT_LG) {
  @include buildGridCols(12, 'Lg');
}
